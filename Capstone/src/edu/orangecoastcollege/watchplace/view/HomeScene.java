package edu.orangecoastcollege.watchplace.view;

import java.net.URL;
import java.util.ResourceBundle;

import edu.orangecoastcollege.watchplace.controller.Controller;
import edu.orangecoastcollege.watchplace.model.Watch;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;

public class HomeScene { // implements Initializable
	private static Controller controller = Controller.getInstance();
	@FXML
	private ComboBox<String> dialColorCB;
	@FXML
	private ComboBox<String> brandCB;
	@FXML
	private ComboBox<String> caseShapeCB;
	@FXML
	private ComboBox<String> caseMaterialCB;
	@FXML
	private TextField minPriceTF;
	@FXML
	private TextField maxPriceTF;
	@FXML
	private Label fullNameLabel;
	@FXML
	private Button logout;
	@FXML
	private Button deleteListingButton;
	@FXML
	private Label listingCount;
	@FXML
	private TextField referenceTF;
	@FXML
	private ListView<Watch> listView;
	
//	@Override
//	public void initialize(URL location, ResourceBundle resources) {
//		allVideoGamesLV.setItems(controller.getAllVideoGames());
//		publishersCB.setItems(controller.getDistinctPublishers());
//		platformsCB.setItems(controller.getDistinctPlatforms());
//		
//		publishersCB.setOnAction(e -> filter());
//		platformsCB.setOnAction(e -> filter());
//		yearSlider.setOnMouseDragged(e -> filter());
//		yearSlider.setOnMouseClicked(e -> filter());
//	}
//	
//	private void filter() {
//		String publisher = publishersCB.getSelectionModel().getSelectedItem();
//		String platform = platformsCB.getSelectionModel().getSelectedItem();
//		double minYear = yearSlider.getValue();
//		
//		allVideoGamesLV.setItems(controller.filter(vg -> (publisher == null || vg.getPublisher().equalsIgnoreCase(publisher))
//				&& (platform == null || vg.getPlatform().equalsIgnoreCase(platform)) && vg.getYear() >= minYear));
//	}

	// Event Listener on Button.onAction
	@FXML
	/**
	 * Clears all filters.
	 */
	public void clearFilters() {
		brandCB.getSelectionModel().clearSelection();
		caseShapeCB.getSelectionModel().clearSelection();
		caseMaterialCB.getSelectionModel().clearSelection();
		dialColorCB.getSelectionModel().clearSelection();
		minPriceTF.clear();
		maxPriceTF.clear();
	}

	// Event Listener on Button.onAction
	@FXML
	public void applyFilters() {
		String brand = brandCB.getSelectionModel().getSelectedItem();
		String shape = caseShapeCB.getSelectionModel().getSelectedItem();
		String material = caseMaterialCB.getSelectionModel().getSelectedItem();
		String color = dialColorCB.getSelectionModel().getSelectedItem();
		double minPrice = Double.parseDouble(minPriceTF.getText());
		double maxPrice = Double.parseDouble(minPriceTF.getText());
		// TODO sort by brand,shap,material,color,minPrice,maxPrice

	}

	// Event Listener on Label.onMouseClicked
	@FXML
	public void profileScene() {
		String email = controller.getCurrentUser().getEmail();
		ViewNavigator.loadScene(email.substring(0, email.indexOf('@')) + "'s Account",
				ViewNavigator.ACCOUNT_OVERVIEW_SCENE);
	}

	// Event Listener on Label.onMouseClicked
	@FXML
	public void goToShoppingCart(MouseEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Label.onMouseClicked
	@FXML
	public void goToWishList(MouseEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button.onAction
	@FXML
	public void viewDetails() {
		Watch itemName = listView.getSelectionModel().getSelectedItem();
		ViewNavigator.loadScene(itemName.getName(), ViewNavigator.VIEW_ITEM_DETAILS_SCENE);
	}

	// Event Listener on Button.onAction
	@FXML
	public void addToShoppingCart(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button.onAction
	@FXML
	public void addToWishlist(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button.onAction
	@FXML
	public void addListing(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#deleteListingButton].onAction
	@FXML
	public void deleteListing(ActionEvent event) {
		// TODO Autogenerated
	}
}
